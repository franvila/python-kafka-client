# pythonkafkaclient.yaml - builds and pushes a Python Kafka Client container image.
#
# Requires repository variables:
# - REGISTRY_SERVER - the server of the container registry service e.g. `quay.io` or `docker.io`
# - REGISTRY_USERNAME - - your username on the service (or username of your robot account)
# - REGISTRY_TOKEN - the access token that corresponds to `REGISTRY_USERNAME`
#

name: Python Kafka Client Container 
on:
  workflow_dispatch:
    inputs:
      registry-destination:
        description: 'The release version, e.g. quay.io/<my org>/kaf'
        default: 'quay.io/fvila/pythonkafkaclient'
        required: true
      ref:
        description: 'python confluent_kafka version to install'
        required: true
        default: 'latest'
jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ vars.REGISTRY_SERVER != '' && vars.REGISTRY_USERNAME != '' }}
    steps:
      - name: 'Check out repository'
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_SERVER }}
          username: ${{ vars.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_TOKEN }}
      - name: Build and push python kafka client container image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: LIBRDKAFKA_VERSION=${{ github.event.inputs.ref }}
          platforms: linux/amd64,linux/arm64,linux/s390x,linux/ppc64le
          push: true
          tags: ${{ github.event.inputs.registry-destination }}:${{ github.event.inputs.ref }}
          cache-from: type=gha
          cache-to: type=gha,mode=max,compression=zstd
